let data = {
    projects: [
        {
            name: 'Сайт-визитка',
            class: ['all', 'html', 'js'],
            tools: 'HTML/CSS/JS',
            href: '',
            bg: 'url(../cases/andrewBrown.jpeg) left/cover no-repeat',
            },
        {
            name: 'Сайт-визитка',
            class: ['all', 'html'],
            tools: 'HTML/CSS',
            href: '',
            bg: 'url(../cases/andrewBrown.jpeg) left/cover no-repeat',
            },
        ],

    blog: [
        {
            link: 'blogs/blog.html#0',
            img: 'img/blog-1.jpg',
            title: '"Опять ничего не получается"',
            date: '22 июля, 2021',
            discription: 'У каждого разработчика бывает такой момент, когда он застревает на одной проблеме...',
            introductionImg: '../img/breaking-your-coders-block.jpg',
            introduction: ['У каждого разработчика бывает такой момент, когда он застревает на одной проблеме которую нужно решить. Отчаянно ищем ответы на разнах форумах, тратим кучу нервов и времени, а потом идём спать и проснувшись понимаем на сколько простым было решение.', 'Вот 5 вещей которым которые помогают мне преодолеть подобные моменты.'],

            // Заголовки и тексты статьи
            content: [
                // отладка резиновой уточкой
                {
                    secondTitle: '1. Отладка с "резиновой уткой"',
                    text: ['Если вы раньше работали с другими разработчиками, вы уже должны быть осведомлены о феномене, когда вы пытаетесь объяснить кому-то проблему и на одном дыхании находите решение этой самой проблемы. Это здорово, но никто не хочет тратить драгоценное время своих коллег. Также не всегда найдется коллега, обладающий знаниями или возможностями, необходимыми вам, чтобы помочь в трудную минуту.', 'Простое решение состоит в том, чтобы снова заняться тем же самым явлением с резиновой уткой за вашим столом (если она у вас есть) или любым другим неодушевленным предметом, с которым вы хотите поговорить. Когда ваш разум вынужден переосмыслить проблему таким образом, чтобы сделать ее объяснимой, вам приходится разбивать ее на основные компоненты, и часто именно здесь возникает момент "ага". Было что-то на базовом уровне, чего тебе не хватало. Это глупо, и ваши коллеги по работе могут смотреть на вас забавно, но попробуйте! Вы будете удивлены тем, насколько эффективным это может быть.',
                        ],
                        },
                // зачем я это делаю
                {
                    secondTitle: '2. Спросите себя "зачем я это сделал?"',
                    text: ['Вы когда-нибудь ловили себя на том, что пытаетесь создать функцию или сделать улучшение, о котором на самом деле никто не просил? Хотя по своей природе это хорошее поведение разработчика, но оно никому не поможет, если вы потратите часы на то, чтобы почти ничего не делать. Как правило, мы оказываемся здесь, когда хотим внести небольшое улучшение, которое должно занять всего час или меньше, но превращается в проект на целый день. Обычно из-за узкого видения, отсутствия приоритетных предметов или просто из-за проблемы, которую трудно решить.', 'В любой момент полезно спросить себя: зачем я это создаю? Кто просил об этой функции и стоит ли она того количества времени, которое я уже потратил на нее? Если вы не можете придумать хороший ответ, иногда можно сократить свои потери и двигаться дальше.'],
                        },
                // план б
                {
                    secondTitle: '3. Переключитесь на план Б',
                    text: ['Как и в предыдущем совете, полезно спросить, почему я делаю это – таким образом? Или, если вам нравятся метафоры, почему вы бьете по этому гвоздю кокосовым орехом, а не молотком?', 'Возьмем, к примеру, мою недавнюю проблему. Я потратил лучшую половину недели, пытаясь заставить известную библиотеку JavaScript добавить причудливую карусель изображений на наш новый сайт. На сайте были некоторые сложные функции, для которых эта библиотека никогда не предназначалась. Я перепробовал много вариантов, потранил много времени и нервов но ничего не получалось так ка мне было нужно. В конце концов я понял, что создание карусели с нуля было гораздо более осуществимым, не говоря уже о том, что это заняло всего несколько часов!', 'Мораль этой истории в том, что я должен был остановиться где-нибудь в первый день и спросить, есть ли другой способ подойти к этой проблеме все вместе? Если вы наткнетесь на стену, не бойтесь подойти к проблеме под совершенно другим углом, даже если вам придется начинать с нуля.'],
                        },
                // отложите эту проблему
                {
                    secondTitle: '4. Отложите эту проблену на время',
                    text: ['Предполагая, что у вас нет недостатка во времени, можно на некоторое время отложить вашу проблему. Вам может показаться, что вы сдаетесь, но простое откладывание и работа чем нибудь другим дает вашему разуму передышку. Еще лучше, если вы будете работать над задачами другого рода все вместе, это может осветить некоторые идеи или концепции в вашем мозгу о том, как решить исходную проблему. Я бы рекомендовал отложить решение на несколько часов или даже на день, если сможете.'],
                        },
                // чтение документации
                {
                    secondTitle: '5. Прочитайте документацию',
                    text: ['Это относится не ко всем, но если вы похожи на меня, это совет, который вам нужно услышать от кого-то другого. (потому что иногда правду трудно принять) Очевидно, что чтение документов для любого языка, библиотеки, api или инструмента, которые вы используете, важно. Но легко просто найти и выбрать точный фрагмент кода, который вы искали, чтобы решить свою проблему. В 90% случаев я сразу перехожу к функции или строке, которую ищу в документации, и, честно говоря, в 90% случаев это работает. Очень похоже на поиск одного недостающего кусочка вашей головоломки.', 'Но когда этого не происходит, легко отказаться от документов и попытаться перейти к исходному коду, спросить коллегу или поискать на форумах. Дело в том, что вы, возможно, уже пропустили ответ. Попробуйте прочитать весь раздел или даже всю документацию по тому, что вы используете. Часто могут быть способы решения проблемы, о которых вы даже не знали, что код вообще способен на это. Не говоря уже о более глубоком понимании основных концепций вашего кода'],
                        },
                ],
            },
        {
            link: 'blogs/blog.html#1',
            img: 'img/blog-2.jpg',
            title: 'Полезные расширения для Brackets',
            date: '25 июля, 2021',
            discription: 'Brackets это один из самых популярных редакторов кода среди верстальщиков...',
            introductionImg: '../img/brackets.jpg',
            introduction: ['Brackets это один из самых популярных редакторов кода среди верстальщиков и это не просто так.', 'Brackets ориентирован на работу с HTML, CSS и JavaScript. Эти же технологии лежат в основе самого редактора, что обеспечивает его кроссплатформенность т. е. совместимость с операционными системами Mac, Windows и Linux, а так же поддерживается на GitHub.', 'В этой статье я приведу полезные расширения для Brackets которыми пользуюсь сам.'],

            // Заголовки и тексты статьи
            content: [
                {
                    secondTitle: '1. Emmet',
                    text: ['Пожалуй одно из самых популярных расширений для вёрстки в целом является Emmet. Он позволяет писать CSS и HTML код быстрее с помощью аббревиатур, разворачивающихся в полноценные теги.', 'Ссылка на гитхаб:', {type: 'link',link: 'https://github.com/emmetio/brackets-emmet', linkName: 'github.com/emmetio/brackets-emmet'}],
                    },
                {
                    secondTitle: '2. Beautify',
                    text: ['Этот плагин позволяет сочитаение клавиш CTRL + ALT + B оформить структуру разметки с отступами и сделает её читабельной.', {type: 'link', link: 'https://github.com/brackets-beautify/brackets-beautify', linkName: 'github.com/brackets-beautify/brackets-beautify'}],
                    },
                ],
            },
        ],
};